#!/usr/bin/env python

'''
    MyOps2 - a new monitoring system for PlanetLab and other testbeds

    This app will launch the workers needed to setup the WEB interface,
    REST API and Websockets API

    (c) 2014 - 2015 Ciro Scognamiglio <ciro.scognamiglio@lip6.fr>
'''

import os
import logging

from tornado import web, gen, ioloop, httpserver
from rethinkdb import r


from myops2.lib.store import connect as dbconnect
from myops2.web import static
from myops2.web.protocols import rest, websocket
from myops2.web.controllers import home, jobs

logging.basicConfig(level=logging.INFO,
                    format="%(asctime)s %(levelname)s [%(name)s] %(message)s",
                    datefmt="%Y-%m-%d %H:%M:%S",
                    filename="/var/log/myops2-web.log", filemode="a")

@gen.coroutine
def run_httpserver():

    print "Starting web thread"

    # Rethinkdb setting for tornado
    r.set_loop_type("tornado")
    dbconnection = yield dbconnect()

    http_server = httpserver.HTTPServer(Application(dbconnection))
    http_server.listen(8111)


class Application(web.Application):

    def __init__(self, dbconnection):
        self.templates = os.path.join(os.path.dirname(__file__), "../web/templates")
        self.static = os.path.join(os.path.dirname(__file__), "../web/static")

        # DataBase connection
        self.dbconnection = dbconnection

        handlers = [
            (r'/', home.Index),
            (r'/static/(.*)', web.StaticFileHandler, {'path': static}),
            (r'/jobs', jobs.Log),

            (r'/api/resources', rest.Resources),
            (r'/api/job', rest.Job),

            (r'/ws', websocket.Api)

        ]

        settings = dict(cookie_secret="x&7G1d2!5MhG9SWkXu",
                        login_url="/login",
                        template_path=self.templates,
                        static_path=self.static,
                        # xsrf_cookies=True,
                        debug=True)

        web.Application.__init__(self, handlers, **settings)

if __name__ == '__main__':

    r.set_loop_type("tornado")
    dbconnection = dbconnect()

    app = Application(dbconnection)
    app.listen(8111)

    #ioloop.IOLoop.current().run_sync(run_httpserver)

    try :
        ioloop.IOLoop.instance().start()
    except KeyboardInterrupt:
        ioloop.IOLoop.instance().stop()
    except Exception as e:
        print e
        exit(1)
